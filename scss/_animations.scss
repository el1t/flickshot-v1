$swift-out: cubic-bezier(.55,0,.1,1);

%stagger {
	@for $i from 1 through 7 {
		&:nth-child(#{$i}) {
			transition-delay: 0.05s * $i;
		}
	}
}

%stagger-pairs {
	@for $i from 1 through 5 {
		&:nth-child(n + #{2 * $i + 1}):nth-child(-n + #{2 * ($i + 1)}) {
			transition-delay: 0.05s * $i;
		}
	}
}

.fade-transition {
	opacity: 1;
	transition: opacity 0.2s linear;

	&.fade-enter {
		opacity: 0;
	}

	&.fade-leave {
		@extend .fade-enter;
		pointer-events: none;
	}
}

.slide-transition {
	transition: top 0.3s;
	&.slide-enter > * {
		transform: translateX(100vw);
	}
	&.slide-leave {
		pointer-events: none;
		& > * {
			transform: translateX(-100vw);
		}
	}
	& > * {
		@extend %stagger;
		transition: transform 0.3s $swift-out;
	}
}

.slide-pairs-transition {
	transition: top 0.3s;
	&.slide-pairs-enter > * {
		transform: translateX(100vw);
	}
	&.slide-pairs-leave {
		@extend .slide-transition.slide-leave;
	}
	& > * {
		@extend %stagger-pairs;
		transition: transform 0.3s $swift-out;
	}
}

#svg {
	.target-transition {
		opacity: 1;
		transition-property: transform, opacity;
		transition-duration: 0.15s;
		transition-timing-function: linear;
		&.target-leave {
			@extend .fade-transition.fade-leave;
			transform: scale(1.1);
			transform-origin: center;
			pointer-events: none;
		}
	}

	.click-transition {
		opacity: 1;
		pointer-events: none;
		transition: opacity 0.2s linear;
		&.click-leave {
			@extend .target-transition.target-leave
		}
	}
}

.countdown-transition.countdown-leave {
	animation: countdown 3s $swift-out;
}

$countdown-height: 100vh;
@mixin animate($count) {
	0% { transform: translateY($countdown-height); }
	$step: (100 / ($count));
	$progress: (50 / ($count));
	$translate: 0;
	@while $progress <= (100 - 50/($count) + 0.5) {
		#{$progress}% { transform: translateY($translate); }
		$progress: $progress + $step;
		$translate: $translate - $countdown-height;
	}
	100% { transform: translateY($translate); }
}

@keyframes countdown {
	@include animate(3);
}
